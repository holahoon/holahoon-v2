// === Global text colors
$textColors: (
  light-black: #343434,
  lighter-black: #424242,
  medium-gray: #8f8f8f,
  light-gray: #cccccc,
  lighter-gray: #e2e2e2,
  redish: #fb4b53,
  white: #ffffff
);

// === Functionality to assign colors
@function color($color-name) {
  @return map-get($textColors, $color-name);
}

// === Global flex box
@mixin flex($direction, $justify, $align) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// === Responsive
$big-desktop: "(min-width: 1550px)";
$small-desktop: "(max-width: 1150px)";
$ipad: "(max-width: 800px)";
$mobile: "(max-width: 450px)";
$bigger-mobile: "(max-width: 450px) and (min-height: 700px)";
$mobile-rotate: "(max-width: 840px) and (max-height: 450px)";

@mixin responsive($media) {
  @if $media == big-desktop {
    @media #{$big-desktop} {
      @content;
    }
  } @else if $media == small-desktop {
    @media #{$small-desktop} {
      @content;
    }
  } @else if $media == ipad {
    @media #{$ipad} {
      @content;
    }
  } @else if $media == mobile {
    @media #{$mobile} {
      @content;
    }
  } @else if $media == bigger-mobile {
    @media #{$bigger-mobile} {
      @content;
    }
  } @else if $media == mobile-rotate {
    @media #{$mobile-rotate} {
      @content;
    }
  }
}

@media (max-width: 815px) and (max-height: 415px) {
  .MainPage-header {
    margin-top: 5%;
  }
  .MainPage-h1-content {
    font-size: 3.5rem;
  }
  .MainPage-h3-content {
    font-size: 1rem;
  }
  .MainPage-line {
    width: 12rem;
  }
  .MainPage-bottom {
    margin-top: 1rem;
  }
}
